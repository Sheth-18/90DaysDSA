//https://www.pepcoding.com/resources/online-java-foundation/recursion-with-arraylists/get-maze-paths-official/ojquestion

import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        
        Scanner scn = new Scanner(System.in);
        int n= scn.nextInt(), m = scn.nextInt();
        ArrayList<String> paths = getMazePaths(0, 0, n-1, m-1);
        System.out.println(paths);
    }

    // sr - source row
    // sc - source column
    // dr - destination row
    // dc - destination column
    public static ArrayList<String> getMazePaths(int sr, int sc, int dr, int dc) {

        ArrayList<String> mres = new ArrayList<>();

        if(sr == dr && sc == dc){
            mres.add("");
            return mres;
        }
        
        if(sr > dr || sc > dc){
            return mres;
        }
        
        ArrayList<String> hori = getMazePaths(sr, sc+1, dr, dc);
        for(String curr: hori){
            mres.add("h" + curr);
        }
        
        ArrayList<String> ver = getMazePaths(sr+1, sc, dr, dc);
        for(String curr: ver){
            mres.add("v" + curr);
        }
        
        return mres;
    }

}
